// <auto-generated />
using System;
using IOT_HomeSuperintendent.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IOT_HomeSuperintendent.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211125201812_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("IOT_HomeSuperintendent.Models.Data", b =>
                {
                    b.Property<string>("IDData")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("IDDevice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDData");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("IOT_HomeSuperintendent.Models.IOTDevice", b =>
                {
                    b.Property<string>("IDDevice")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DataType")
                        .HasColumnType("text");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("DeviceStatus")
                        .HasColumnType("text");

                    b.Property<string>("DeviceType")
                        .HasColumnType("text");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("MacAddress")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("MeasurementUnit")
                        .HasColumnType("text");

                    b.HasKey("IDDevice");

                    b.HasIndex("MacAddress")
                        .IsUnique();

                    b.ToTable("IOTDevice");

                    b.HasData(
                        new
                        {
                            IDDevice = "38B9F907-5961-4589-90E8-9EC020B7D40D",
                            DataType = "float",
                            DeviceName = "Sensor Nivel de Agua",
                            DeviceStatus = "Online",
                            DeviceType = "water_level_sensor",
                            FirmwareVersion = "1.0.1",
                            IPAddress = "192.168.31.99",
                            MacAddress = "47-1D-44-CB-BF-05",
                            MeasurementUnit = "%"
                        },
                        new
                        {
                            IDDevice = "74F61449-AFA3-4D38-BBDE-4CE2600732D6",
                            DataType = "float",
                            DeviceName = "Sensor Nivel de Agua",
                            DeviceStatus = "Online",
                            DeviceType = "water_level_sensor",
                            FirmwareVersion = "1.0.1",
                            IPAddress = "192.168.31.100",
                            MacAddress = "01-2F-7A-93-A3-46",
                            MeasurementUnit = "%"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
